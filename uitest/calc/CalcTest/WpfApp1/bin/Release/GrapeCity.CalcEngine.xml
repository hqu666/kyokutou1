<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>GrapeCity.CalcEngine</name>
  </assembly>
  <members>
    <member name="M:GrapeCity.CoreRT.CompareOrdinal(System.String,System.String)">
      <summary>各文字列の対応する<see cref="T:System.Char" />オブジェクトの数値を評価することによって、指定した2つの<see cref="T:System.String" />オブジェクトを比較します。</summary>
      <param name="strA">比較する最初の文字列。</param>
      <param name="strB">比較する2番目の文字列。</param>
      <returns>2つの被比較数の間の辞書的関係を示す整数。</returns>
      <remarks>0より小さい: strAはstrBより小さい。0: strAとstrBは等しい。0より大きい: strAはstrBより大きい。</remarks>
    </member>
    <member name="M:GrapeCity.CoreRT.CompareOrdinalIgnoreCase(System.String,System.String)">
      <summary>序数の（2分木）ソートルールを使用し、比較対象文字列の大文字と小文字の違いを無視して、指定した2つの<see cref="T:System.String" />オブジェクトを比較します。</summary>
      <param name="strA">比較する最初の文字列。</param>
      <param name="strB">比較する2番目の文字列。</param>
      <returns>2つの被比較数の間の辞書的関係を示す整数。</returns>
      <remarks>0より小さい: strAはstrBより小さい。0: strAとstrBは等しい。0より大きい: strAはstrBより大きい。文字列定数を比較するときは、パフォーマンスを向上させるため、大文字の文字列を渡してください。</remarks>
    </member>
    <member name="M:GrapeCity.CoreRT.EqualsOrdinal(System.String,System.String)">
      <summary>指定した2つのStringオブジェクトが同じ値を持つかどうかを判断します。</summary>
      <param name="strA">比較する最初の文字列。</param>
      <param name="strB">比較する2番目の文字列。</param>
      <returns>
        aの値とbの値が同じである場合は<c>true</c>、それ以外の場合は<c>false</c>。aとbがどちらもnullである場合は<c>true</c>を返します。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.EqualsOrdinalIgnoreCase(System.Char*,System.Int32,System.String)">
      <summary>序数の（2分木）ソートルールを使用し、比較対象文字列の大文字と小文字の違いを無視した場合に、指定した2つのStringオブジェクトが同じ値を持つかどうかを判断します。</summary>
      <param name="strA">比較する最初の文字列。</param>
      <param name="strB">比較する2番目の文字列。</param>
      <returns>
        aの値とbの値が同じである場合は<c>true</c>、それ以外の場合は<c>false</c>。aとbがどちらもnullである場合は<c>true</c>を返します。</returns>
      <remarks>文字列定数を比較するときは、パフォーマンスを向上させるため、大文字の文字列を渡してください。</remarks>
    </member>
    <member name="M:GrapeCity.CoreRT.GetAnsiCompatibleFromJapanese(System.String)">
      <summary>日本語の文字からANSI互換文字を取得します。</summary>
      <param name="text">元のテキストを示す文字列値。</param>
      <returns>ANSI互換文字を表す文字列値。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.GetByteCount(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>指定した部分文字列から総バイト数を取得します。</summary>
      <param name="text">テキスト。</param>
      <param name="charIndex">計算する文字の開始インデックス。</param>
      <param name="length">計算する部分文字列の長さ。</param>
      <param name="codepage">現在の<see cref="T:System.Globalization.TextInfo" />によって表されている書記体系で使用されるコードページ。</param>
      <returns>指定した部分文字列の総バイト数。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.GetCharacterLengthFromBytes(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>バイトから文字長を取得します。</summary>
      <param name="text">テキスト。</param>
      <param name="charIndex">計算する文字の開始インデックス。負の値は、右から左へ計算することを示します。</param>
      <param name="bytes">バイト。</param>
      <param name="codepage">現在の<see cref="T:System.Globalization.TextInfo" />によって表されている書記体系で使用されるコードページ。</param>
      <returns>開始インデックスが文字の先頭を指していない場合は負の値。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IndexOf(System.String,System.Char,System.Int32,System.Int32)">
      <summary>指定した文字をこのインスタンス内で検索し、最初に見つかった位置の0から始まるインデックスを返します。検索は指定した文字位置から開始され、指定した数の文字位置が調べられます。</summary>
      <param name="s">チェックする文字列。</param>
      <param name="value">検索するUnicode文字。</param>
      <param name="startIndex">検索の開始位置。</param>
      <param name="count">調べる文字位置の数。</param>
      <returns>文字が見つかった場合は、その位置を示す0から始まるインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IndexOf(System.Char*,System.Char,System.Int32,System.Int32)">
      <summary>指定した文字をこのインスタンス内で検索し、最初に見つかった位置の0から始まるインデックスを返します。検索は指定した文字位置から開始され、指定した数の文字位置が調べられます。</summary>
      <param name="pChars">チェックする文字列。</param>
      <param name="value">検索するUnicode文字。</param>
      <param name="startIndex">検索の開始位置。</param>
      <param name="count">調べる文字位置の数。</param>
      <returns>文字が見つかった場合は、その位置を示す0から始まるインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IndexOfWhiteSpace(System.String,System.Int32,System.Int32)">
      <summary>指定した文字をこのインスタンス内で検索し、最初に見つかった位置の0から始まるインデックスを返します。検索は指定した文字位置から開始され、指定した数の文字位置が調べられます。</summary>
      <param name="s">チェックする文字列。</param>
      <param name="startIndex">検索の開始位置。</param>
      <param name="count">調べる文字位置の数。</param>
      <returns>文字が見つかった場合は、その位置を示す0から始まるインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IndexOfWhiteSpace(System.Char*,System.Int32)">
      <summary>指定した文字をこのインスタンス内で検索し、最初に見つかった位置の0から始まるインデックスを返します。検索は指定した文字位置から開始され、指定した数の文字位置が調べられます。</summary>
      <param name="s">チェックする文字列。</param>
      <param name="startIndex">検索の開始位置。</param>
      <param name="count">調べる文字位置の数。</param>
      <returns>文字が見つかった場合は、その位置を示す0から始まるインデックス。見つからなかった場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IsAsciiLetter(System.String)">
      <summary>指定したUnicode文字のカテゴリーが文字でも10進数の数字でもないかどうかを示します。</summary>
      <param name="c">評価するUnicode文字。</param>
      <returns>
        <paramref name="c" />が文字でも10進数の文字でもない場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IsAsciiLetterOrDigit(System.Char)">
      <summary>指定したUnicode文字のカテゴリーが文字でも10進数の数字でもないかどうかを示します。</summary>
      <param name="c">評価するUnicode文字。</param>
      <returns>
        <paramref name="c" />が文字でも10進数の文字でもない場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IsInfinityOrNaN(System.Double)">
      <summary>指定した数字が正/負の無限大またはNaN（Not a Number）に評価されるかどうかを示す値を返します。</summary>
      <param name="d">数字。</param>
      <returns>
        <paramref name="d" />が無限大または<see cref="F:System.Double.NaN" />に評価される場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.IsWhiteSpace(System.Char)">
      <summary>指定した文字が空白文字かどうかを判断します。</summary>
      <param name="c">c。</param>
      <returns>
        指定した文字が空白文字の場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)">
      <summary>指定したUnicode文字をこのインスタンス内の部分文字列で検索し、最後に見つかった位置の0から始まるインデックスを返します。検索は指定した文字位置から開始され、文字列の先頭に向かって指定した数の文字位置が調べられます。</summary>
      <param name="s">チェックする文字列。</param>
      <param name="value">検索するUnicode文字。</param>
      <param name="startIndex">検索の開始位置。検索はstartIndexからこのインスタンスの先頭に向かって行われます。</param>
      <param name="count">調べる文字位置の数。</param>
      <returns>文字が見つかった場合は、その位置を示す0から始まるインデックス。文字が見つからなかった場合、または現在のインスタンスが<see cref="F:System.String.Empty" />と等しい場合は-1。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.MemoryCopy(System.Byte*,System.Byte*,System.UInt32)">
      <summary>指定した移動先にmemmoveします。</summary>
      <param name="src">ターゲットアドレス。</param>
      <param name="dest">コピーするバイトのアドレス。</param>
      <param name="bytesToCopy">コピーするバイト数。</param>
    </member>
    <member name="M:GrapeCity.CoreRT.Replace(System.String,System.Char,System.Char)">
      <summary>指定したUnicode文字を指定した文字列内で検索し、一致するすべての文字位置を別のUnicode文字に置換します。</summary>
      <param name="text">置換する文字列値。</param>
      <param name="oldChar">置換されるUnicode文字。</param>
      <param name="newChar">oldCharに一致するすべての文字位置を置換するUnicode文字。</param>
      <remarks>この関数は<paramref name="text" />を直接変更します。</remarks>
    </member>
    <member name="M:GrapeCity.CoreRT.StartsWithOrdinal(System.String,System.String,System.Int32)">
      <summary>指定した文字列の先頭部分が別の指定した文字列と一致するかどうかを判断します。文字列は順序どおりに比較されます。</summary>
      <param name="str">チェックする文字列。</param>
      <param name="startsWith">比較を開始する文字のインデックス。</param>
      <returns>
        <paramref name="str" />が<paramref name="startsWith" />で始まる場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CoreRT.TrimBreakableSpace(System.String)">
      <summary>現在の文字列から、指定した文字が最初に見つかった位置より前の部分、および最後に見つかった位置より後の部分をすべて除去します。</summary>
      <param name="s">トリミングする文字列。</param>
      <returns>トリミングされた文字列を表す文字列値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ArrayHelper.Clone``1(``0[],System.Int32)">
      <summary>指定した配列を新しい配列にクローンします。</summary>
      <typeparam name="T">配列内の要素の型。</typeparam>
      <param name="source">クローンする配列ソース。</param>
      <param name="length">クローンする要素の数を示す整数値。</param>
      <returns>クローンされた配列を表す<see cref="!:T[]" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ArrayHelper.Clone``1(``0[],System.Int32,System.Int32)">
      <summary>指定した配列を新しい配列にクローンします。</summary>
      <typeparam name="T">配列内の要素の型。</typeparam>
      <param name="source">クローンする配列ソース。</param>
      <param name="index">クローンする要素の開始インデックスを示す整数値。</param>
      <param name="length">クローンする要素の数を示す整数値。</param>
      <returns>クローンされた配列を表す<see cref="!:T[]" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ArrayHelper.Clone``1(``0[])">
      <summary>指定した配列を新しい配列にクローンします。</summary>
      <typeparam name="T">配列内の要素の型。</typeparam>
      <param name="source">クローンする配列ソース。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.ArrayHelper.Clone``2(``0[])">
      <summary>指定した配列を新しい配列にクローンします。</summary>
      <typeparam name="T1">ソース配列内の要素の型。</typeparam>
      <typeparam name="T2">ターゲット配列内の要素の型。</typeparam>
      <param name="source">クローンする配列ソース。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.AsyncApplication">
      <summary>リアルタイムデータ（トピックパラメーター）に関するデータベースを提供する一意の非同期アプリケーションを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.#ctor">
      <summary><see cref="T:GrapeCity.CalcEngine.AsyncApplication" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.AsyncApplication.IsServerStarted">
      <summary>このインスタンスがサーバーによって起動されるかどうかを示す値を取得または設定します。</summary>
      <value>
        このインスタンスがサーバーによって起動される場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.AsyncApplication.Topics">
      <summary>トピックを取得します。</summary>
      <value>トピック。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.AddChangedTopic(System.Int32,System.String)">
      <summary>指定したトピックを変更リストに追加します。</summary>
      <param name="topicId">トピックIDを示す整数値。</param>
      <param name="topicKey">トピックキーを示す文字列値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.ConnectData(GrapeCity.CalcEngine.AsyncTopic)">
      <summary>データを接続します。</summary>
      <param name="topic">非同期トピック。</param>
      <returns>
        データの接続が成功した場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.CreateTopic(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IArguments)">
      <summary>非同期トピックを作成します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />インスタンス。</param>
      <param name="arguments">関数のすべての引数を示す <see cref="T:GrapeCity.CalcEngine.IArguments" /> インスタンス。</param>
      <returns>非同期トピックを示す <see cref="T:GrapeCity.CalcEngine.AsyncTopic" /> オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.CreateTopicKey(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IArguments)">
      <summary>非同期呼び出しの分類に使用される一意のトピックキーを作成します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />インスタンス。</param>
      <param name="arguments">関数のすべての引数を示す <see cref="T:GrapeCity.CalcEngine.IArguments" /> インスタンス。</param>
      <returns>一意のトピックキーを表す <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.Dispose(System.Boolean)">
      <summary>アンマネージリソースを解放します。オプションで、マネージリソースを解放することもできます。</summary>
      <param name="disposing">
        マネージリソースとアンマネージリソースを両方とも解放する場合は<c>true</c>、アンマネージリソースのみを解放する場合は<c>false</c>。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.Dispose">
      <summary>アンマネージリソースの解放またはリセットに関連付けられたアプリケーション定義のタスクを実行します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.Finalize">
      <summary><see cref="T:GrapeCity.CalcEngine.AsyncApplication" /> クラスのインスタンスをファイナライズします。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.GetData">
      <summary>非同期アプリケーション内のすべてのトピックの最後に受信されたデータを取得します。</summary>
      <returns>トピックのIDと受信データを対応付けるディクショナリー。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.OnDataChanged">
      <summary>非同期アプリケーションから受け取ったデータが変更されたときに呼び出されます。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.Reset">
      <summary>このインスタンスをリセットします。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.Start">
      <summary>非同期アプリケーションを開始します。</summary>
      <returns>
        非同期アプリケーションが正常に開始された場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncApplication.Stop">
      <summary>非同期アプリケーションを停止します。</summary>
    </member>
    <member name="E:GrapeCity.CalcEngine.AsyncApplication.DataChanged">
      <summary>非同期アプリケーションから受け取ったデータが変更されたときに発生します。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.AsyncFunction">
      <summary>計算スレッドをロックせずに結果を後で返すことができる非同期関数を表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
      <seealso cref="T:GrapeCity.CalcEngine.Function" />
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncFunction.#ctor(System.String,System.Int32,System.Int32,GrapeCity.CalcEngine.FunctionAttributes)">
      <summary><see cref="T:GrapeCity.CalcEngine.AsyncFunction" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="functionName">関数の名前。</param>
      <param name="minArgs">引数の最小数を示す整数値。</param>
      <param name="maxArgs">引数の最大数を示す整数値。</param>
      <param name="attributes">関数の属性を示す <see cref="T:GrapeCity.CalcEngine.FunctionAttributes" />  値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncFunction.CreateApplication(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IArguments)">
      <summary>非同期アプリケーションを作成します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />インスタンス。</param>
      <param name="arguments">関数のすべての引数を示す <see cref="T:GrapeCity.CalcEngine.IArguments" /> インスタンス。</param>
      <returns>非同期アプリケーションを示す <see cref="T:GrapeCity.CalcEngine.AsyncApplication" /> オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncFunction.CreateApplicationKey(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IArguments)">
      <summary>非同期関数の分類に使用される一意のアプリケーションキーを作成します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />インスタンス。</param>
      <param name="arguments">関数のすべての引数を示す <see cref="T:GrapeCity.CalcEngine.IArguments" /> インスタンス。</param>
      <returns>一意のアプリケーションキーを表す <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.AsyncTopic">
      <summary>非同期トピックを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.AsyncTopic.#ctor">
      <summary><see cref="T:GrapeCity.CalcEngine.AsyncTopic" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.BinaryOperatorExpression.ExpressionCount">
      <summary>子式の総数を取得します。</summary>
      <value>子式の総数を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.BinaryOperatorExpression.LeftExpression">
      <summary>左辺の式を取得または設定します。</summary>
      <value>左辺の式。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.BinaryOperatorExpression.RightExpression">
      <summary>右辺の式を取得または設定します。</summary>
      <value>右辺の式。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.BinaryOperatorExpression.Symbol">
      <summary>演算子の記号を取得します。</summary>
      <value>演算子の記号を示す文字列値。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.BinaryOperatorExpression.Equals(GrapeCity.CalcEngine.Expression)">
      <summary>現在の<see cref="T:GrapeCity.CalcEngine.Expression" />が別の<see cref="T:GrapeCity.CalcEngine.Expression" nolink="true" />と等しいかどうかを示します。</summary>
      <param name="other">比較するインスタンス。</param>
      <returns>
        現在の<see cref="T:GrapeCity.CalcEngine.Expression" />が比較対象の<see cref="T:GrapeCity.CalcEngine.Expression" nolink="true" />と等しい場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.BinaryOperatorExpression.GetExpression(System.Int32)">
      <summary>指定した位置にある式を取得します。</summary>
      <param name="index">式の位置を示す整数値。</param>
      <returns>指定した位置にある式。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.BinaryOperatorExpression.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これはハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.BinaryOperatorExpression.SetExpression(System.Int32,GrapeCity.CalcEngine.Expression)">
      <summary>指定した位置にある式を置き換えます。</summary>
      <param name="index">置き換える式の位置を示す整数値。</param>
      <param name="expression">置き換える式。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.BinaryOperatorExpression.Unparse(GrapeCity.CalcEngine.FormulaEngine,System.Text.StringBuilder)">
      <summary>現在の <see cref="T:GrapeCity.CalcEngine.BinaryOperatorExpression" /> を数式テキストに逆解析します。</summary>
      <param name="engine">逆解析するパーサー。</param>
      <param name="sb">数式テキストを追加する <see cref="T:System.Text.StringBuilder" /> 。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.CalcHelper">
      <summary>内部使用のみ。このクラスは<see langword="static class" />であるため、継承や初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.CalcHelper.IsNumericValue(System.Object)">
      <summary>指定された値が数値かどうかを示すブール値を取得します。</summary>
      <param name="value">チェックする値。</param>
      <returns>
        指定した値が数値の場合は <c>true</c>、それ以外の場合は <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CalcHelper.ToDate(System.Double,System.Boolean,System.Boolean)">
      <summary>日付シリアル値を<see cref="T:System.DateTime" />値に変換します。</summary>
      <param name="value">日付シリアル値を示す倍精度値。</param>
      <param name="isDate1904"><c>true</c>に設定すると、1904年日付方式が使用されます。</param>
      <returns>日付シリアル値を表す倍精度値。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.Expression">
      <summary>式の基本クラスを表します。このクラスは <see langword="abstract" /> であるため、初期化できません。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.Expression.ExpressionCount">
      <summary>子式の総数を取得します。</summary>
      <value>子式の総数を示す整数値。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.Clone(GrapeCity.CalcEngine.FormulaEngine)">
      <summary>指定した解析コンテキストを使用して、現在の <see cref="T:GrapeCity.CalcEngine.Expression" /> を浅いクローンします。</summary>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>浅いクローンされた式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.ContainsAbsoluteReference">
      <summary>式に相対参照が含まれているかどうかを示す値を取得します。</summary>
      <returns>
        式に相対参照が含まれている場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.ContainsHyperlink">
      <summary>この式にハイパーリンク関数が含まれているかどうかを判断します。</summary>
      <returns>
        このインスタンスにHYPERLINK 関数が含まれる場合<c>true</c>。 それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.ContainsMixedReference">
      <summary>式に相対参照と絶対参照の両方が含まれているかどうかを示す値を取得します。</summary>
      <returns>
        式に相対参照と絶対参照の両方が含まれている場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.ContainsReference">
      <summary>式に参照が含まれているかどうかを示す値を取得します。</summary>
      <returns>
        式に参照が含まれている場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.ContainsRelativeReference">
      <summary>式に相対参照が含まれているかどうかを示す値を取得します。</summary>
      <returns>
        式に相対参照が含まれている場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.Equals(GrapeCity.CalcEngine.Expression)">
      <summary>現在の<see cref="T:GrapeCity.CalcEngine.Expression" />が別の<see cref="T:GrapeCity.CalcEngine.Expression" nolink="true" />と等しいかどうかを示します。</summary>
      <param name="obj">このインスタンスと比較する <see cref="T:GrapeCity.CalcEngine.Expression" /> 。</param>
      <returns>
        現在の<see cref="T:GrapeCity.CalcEngine.Expression" />が比較対象の<see cref="T:GrapeCity.CalcEngine.Expression" nolink="true" />と等しい場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> がこのインスタンスと等しいかどうかを判断します。</summary>
      <param name="obj">このインスタンスと比較する <see cref="T:System.Object" /> 。</param>
      <returns>
        指定した<see cref="T:System.Object" />がこのインスタンスと等しい場合は<c>true</c> 、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.GetExpression(System.Int32)">
      <summary>指定した位置にある式を取得します。</summary>
      <param name="index">式の位置を示す整数値。</param>
      <returns>指定した位置にある式。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これはハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.IsImplicitIntersectionOperatorAdded">
      <summary>下位互換性のための暗黙的な交差演算子式を決定します。これは、現在の式の子に@を追加する必要があるかどうかを判断するために、エクスポート時に使用されます。</summary>
      <param name="engine">数式エンジン。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.SetExpression(System.Int32,GrapeCity.CalcEngine.Expression)">
      <summary>指定した位置にある式を置き換えます。</summary>
      <param name="index">置き換える式の位置を示す整数値。</param>
      <param name="expression">置き換える式。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.Expression.Unparse(GrapeCity.CalcEngine.FormulaEngine,System.Text.StringBuilder)">
      <summary>現在の <see cref="T:GrapeCity.CalcEngine.Expression" /> を数式テキストに逆解析します。</summary>
      <param name="engine">数式エンジン。</param>
      <param name="sb">数式テキストを追加する <see cref="T:System.Text.StringBuilder" /> 。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.Extensions">
      <summary>計算エンジンアセンブリの拡張メソッドが含まれます。 このクラスは <see langword="static class" /> であるため、継承や初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.Extensions.GetValue(GrapeCity.CalcEngine.IReadonlyPrimitiveValue,GrapeCity.CalcEngine.IEvaluationContext)">
      <summary><see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> インスタンスの値をオブジェクトとして取得します。</summary>
      <param name="value"><see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> インスタンスの値。</param>
      <param name="context">参照から値を取得するための評価コンテキスト。</param>
      <returns><see cref="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue" /> インスタンスの値を表すオブジェクト。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.FormulaEngine">
      <summary>数式エンジンを表します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.FormulaEngine.ContextTranslatedColumnCount">
      <summary>式を数式に逆解析するときに平行移動される、現在の参照ソースの列数を取得または設定します。</summary>
      <value>平行移動される列の数を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.FormulaEngine.ContextTranslatedRowCount">
      <summary>式を数式に逆解析するときに平行移動される、現在の参照ソースの行数を取得または設定します。</summary>
      <value>平行移動される行の数を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.FormulaEngine.Culture">
      <summary>解析および逆解析処理に使用される現在の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得します。</summary>
      <value>現在のカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.FormulaEngine.IsA1Reference">
      <summary>現在の解析モードがA1参照スタイルであるかどうかを示す値を取得します。</summary>
      <value>
        現在の解析モードがA1参照スタイルである場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.AddResolver(GrapeCity.CalcEngine.ISymbolResolver)">
      <summary>セル参照や外部参照などの逆解析される記号を解決するカスタム記号レゾルバーを追加します。</summary>
      <param name="resolver">追加するカスタム記号レゾルバー。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.AddResolver(GrapeCity.CalcEngine.IFunctionResolver)">
      <summary>カスタム関数を解決するカスタム関数レゾルバーを追加します。</summary>
      <param name="resolver">追加するカスタム関数レゾルバー。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.AddResolver(GrapeCity.CalcEngine.IOperatorResolver)">
      <summary>標準演算子をカスタム演算子によってオーバーライドできるようにするカスタム演算子レゾルバーを追加します。</summary>
      <param name="resolver">追加するカスタム演算子レゾルバー。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.Clone(GrapeCity.CalcEngine.Expression)">
      <summary>指定した式をクローンします。</summary>
      <param name="expression">クローンする式。</param>
      <returns>新しくクローンされた式。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.EnterContext(GrapeCity.CalcEngine.IReferenceSource,System.Int32,System.Int32)">
      <summary>指定した解析コンテキストに入ります。</summary>
      <param name="source">数式を使用する <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> オブジェクト。</param>
      <param name="contextRow">コンテキスト行インデックスを示す整数値。</param>
      <param name="contextColumn">コンテキスト列インデックスを示す整数値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.EnterContext(GrapeCity.CalcEngine.IReferenceSource,System.Int32,System.Int32,System.Boolean)">
      <summary>指定した解析コンテキストに入ります。</summary>
      <param name="source">数式を使用する <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> オブジェクト。</param>
      <param name="contextRow">コンテキスト行インデックスを示す整数値。</param>
      <param name="contextColumn">コンテキスト列インデックスを示す整数値。</param>
      <param name="isA1Reference"><c>true</c>に設定した場合、数式はA1参照形式を使用します。それ以外の場合は、R1C1参照形式を使用します。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.ExitContext">
      <summary>現在の解析コンテキストから抜けて以前の解析コンテキストに戻ります。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.Highlight(System.String,System.Boolean)">
      <summary>指定した数式テキストを式に解析します。</summary>
      <param name="formulaText">数式テキストを示す文字列。</param>
      <param name="detectFormulaSymbol">「=」文字を検出してスキップするかどうかを決定します。</param>
      <returns>強調表示されているデータを表す<see cref="T:GrapeCity.CalcEngine.SyntaxHighlight" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.Parse(System.String,GrapeCity.CalcEngine.Expression@,System.Boolean)">
      <summary>指定した数式テキストを式に解析します。</summary>
      <param name="formulaText">数式テキストを示す文字列。</param>
      <param name="context">解析用の追加情報を提供するコンテキスト。</param>
      <param name="parsedExpression">解析された式。</param>
      <returns>
        数式を <seealso cref="T:GrapeCity.CalcEngine.Expression" /> インスタンスに解析できる場合は<c>true</c> 、それ以外の場合は <c>false</c> 。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.RemoveResolver(GrapeCity.CalcEngine.ISymbolResolver)">
      <summary>セル参照や外部参照などの逆解析される記号を解決するカスタム記号レゾルバーを削除します。</summary>
      <param name="resolver">削除するカスタム記号レゾルバー。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.RemoveResolver(GrapeCity.CalcEngine.IFunctionResolver)">
      <summary>カスタム関数を解決するカスタム関数レゾルバーを削除します。</summary>
      <param name="resolver">削除するカスタム関数レゾルバー。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.RemoveResolver(GrapeCity.CalcEngine.IOperatorResolver)">
      <summary>標準演算子をカスタム演算子によってオーバーライドできるようにするカスタム演算子レゾルバーを削除します。</summary>
      <param name="resolver">削除するカスタム演算子レゾルバー。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.SetLanguagePackage(GrapeCity.CalcEngine.ICalcEngineLanguagePackage)">
      <summary>言語パッケージを設定します。</summary>
      <param name="languagePackage">新しい言語パッケージ。</param>
      <returns>古い言語パッケージ。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.StrictR1C1Boundary">
      <summary>R1C1参照スタイルで解析するとき、非連結範囲はすべて#REF!として解析されます。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.TryParseA1Reference(System.String,System.Int32,System.Int32,GrapeCity.CalcEngine.RangeReference@)">
      <summary>A1形式の範囲参照の文字列表現を対応する <see cref="T:GrapeCity.CalcEngine.RangeReference" /> に変換します。戻り値は、変換が成功したかどうかを示します。</summary>
      <param name="ref">変換する範囲参照を含む文字列。</param>
      <param name="baseRow">コンテキスト行を示す整数値。</param>
      <param name="baseColumn">コンテキスト列を示す整数値。</param>
      <param name="rangeRef">解析された範囲参照を表す <see cref="T:GrapeCity.CalcEngine.RangeReference" /> 値。</param>
      <returns>
        変換が成功した場合は <c>true</c> 、それ以外の場合は <c>false</c> 。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.TryParseR1C1Reference(System.String,GrapeCity.CalcEngine.RangeReference@)">
      <summary>R1C1形式の範囲参照の文字列表現を対応する <see cref="T:GrapeCity.CalcEngine.RangeReference" /> に変換します。戻り値は、変換が成功したかどうかを示します。</summary>
      <param name="ref">変換する範囲参照を含む文字列。</param>
      <param name="rangeRef">解析された範囲参照を表す <see cref="T:GrapeCity.CalcEngine.RangeReference" /> 値。</param>
      <returns>
        変換が成功した場合は <c>true</c> 、それ以外の場合は <c>false</c> 。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.Unparse(GrapeCity.CalcEngine.IReferenceSource,System.Int32,System.Int32,GrapeCity.CalcEngine.Expression)">
      <summary>指定した式を数式テキストに逆解析します。</summary>
      <param name="source">数式を使用する <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> オブジェクト。</param>
      <param name="contextRow">コンテキスト行インデックスを示す整数値。</param>
      <param name="contextColumn">コンテキスト列インデックスを示す整数値。</param>
      <param name="expr">式を表す <see cref="T:GrapeCity.CalcEngine.Expression" /> オブジェクト。</param>
      <returns>入力式から逆解析された数式テキスト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.Unparse(GrapeCity.CalcEngine.Expression)">
      <summary>指定した式を数式テキストに逆解析します。</summary>
      <param name="expr">式を表す <see cref="T:GrapeCity.CalcEngine.Expression" /> オブジェクト。</param>
      <returns>入力式から逆解析された数式テキスト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseA1Reference(GrapeCity.CalcEngine.RangeReference)">
      <summary>A1参照スタイルの範囲参照を逆解析します。</summary>
      <param name="cellReference">範囲参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <returns>A1参照スタイルの範囲参照を表す<see cref="T:System.String" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseA1Reference(GrapeCity.CalcEngine.RangeReference,System.Text.StringBuilder,GrapeCity.CalcEngine.IReferenceSource,GrapeCity.CalcEngine.IReferenceSource)">
      <summary>A1参照スタイルの範囲参照を逆解析します。</summary>
      <param name="cellReference">範囲参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="sb">A1参照スタイルの範囲参照を格納する<see cref="T:System.Text.StringBuilder" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseA1Reference(GrapeCity.CalcEngine.CellReference)">
      <summary>A1参照スタイルのセル参照を逆解析します。</summary>
      <param name="cellReference">セル参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <returns>A1参照スタイルのセル参照を表す <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseA1Reference(GrapeCity.CalcEngine.CellReference,System.Text.StringBuilder,GrapeCity.CalcEngine.IReferenceSource,GrapeCity.CalcEngine.IReferenceSource)">
      <summary>A1参照スタイルのセル参照を逆解析します。</summary>
      <param name="cellReference">セル参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="sb">A1参照スタイルのセル参照を格納する <see cref="T:System.Text.StringBuilder" /> オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseError(GrapeCity.CalcEngine.CalcError)">
      <summary>指定した<see cref="T:GrapeCity.CalcEngine.CalcError" />値を逆解析します。</summary>
      <param name="error">計算のエラーを示す <see cref="T:GrapeCity.CalcEngine.CalcError" /> 値。</param>
      <returns>計算エラーテキストを表す文字列値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseR1C1Reference(GrapeCity.CalcEngine.RangeReference)">
      <summary>R1C1参照スタイルの範囲参照を逆解析します。</summary>
      <param name="cellReference">範囲参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <returns>R1C1参照スタイルの範囲参照を表す<see cref="T:System.String" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseR1C1Reference(GrapeCity.CalcEngine.RangeReference,System.Text.StringBuilder,GrapeCity.CalcEngine.IReferenceSource,GrapeCity.CalcEngine.IReferenceSource)">
      <summary>R1C1参照スタイルの範囲参照を逆解析します。</summary>
      <param name="cellReference">範囲参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="sb">R1C1参照スタイルの範囲参照を格納する<see cref="T:System.Text.StringBuilder" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseR1C1Reference(GrapeCity.CalcEngine.RangeReference,System.Text.StringBuilder)">
      <summary>R1C1参照スタイルの範囲参照を逆解析します。</summary>
      <param name="cellReference">範囲参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="sb">R1C1参照スタイルの範囲参照を格納する<see cref="T:System.Text.StringBuilder" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseR1C1Reference(GrapeCity.CalcEngine.CellReference)">
      <summary>R1C1参照スタイルのセル参照を逆解析します。</summary>
      <param name="cellReference">セル参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <returns>R1C1参照スタイルのセル参照を表す <see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseR1C1Reference(GrapeCity.CalcEngine.CellReference,System.Text.StringBuilder,GrapeCity.CalcEngine.IReferenceSource,GrapeCity.CalcEngine.IReferenceSource)">
      <summary>R1C1参照スタイルのセル参照を逆解析します。</summary>
      <param name="cellReference">セル参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="sb">R1C1参照スタイルのセル参照を格納する <see cref="T:System.Text.StringBuilder" /> オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnparseReferenceSource(GrapeCity.CalcEngine.IReferenceSource,System.Text.StringBuilder)">
      <summary>指定された参照ソースを逆解析します。</summary>
      <param name="source">逆解析する参照ソース。</param>
      <param name="sb">A1参照スタイルの範囲参照を格納する<see cref="T:System.Text.StringBuilder" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.FormulaEngine.UnstrictR1C1Boundary">
      <summary>R1C1参照スタイルが非連結かどうかを確認することを停止します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.Function.#ctor(System.String,System.Int32,System.Int32,GrapeCity.CalcEngine.FunctionAttributes)">
      <summary><see cref="T:GrapeCity.CalcEngine.Function" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="functionName">関数名を表す文字列値。</param>
      <param name="minArgs">引数の最小数を示す整数値。</param>
      <param name="maxArgs">引数の最大数を示す整数値。</param>
      <param name="attributes">関数の属性を示す <see cref="T:GrapeCity.CalcEngine.FunctionAttributes" />  値。</param>
    </member>
    <member name="P:GrapeCity.CalcEngine.Function.IsAttached">
      <summary>この関数がワークブックセットにアタッチされているかどうかを示す値を取得します。</summary>
      <value>
        この関数がワークブックセットにアタッチされている場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.Function.MaxArgs">
      <summary>関数の引数の最大数を取得します。</summary>
      <value>引数の最大数を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.Function.MinArgs">
      <summary>関数の引数の最小数を取得します。</summary>
      <value>引数の最小数を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.Function.Name">
      <summary>関数名を取得します。</summary>
      <value>関数名を示す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.Function.Clone">
      <summary>この関数をクローンします。</summary>
      <returns>クローンされた関数を表す <see cref="T:GrapeCity.CalcEngine.Function" /> オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Function.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> がこのインスタンスと等しいかどうかを判断します。</summary>
      <param name="obj">現在のオブジェクトと比較するオブジェクト。</param>
      <returns>
        指定した<see cref="T:System.Object" />がこのインスタンスと等しい場合は<c>true</c> 、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Function.Equals(GrapeCity.CalcEngine.Function)">
      <summary>現在のオブジェクトが同じ型の別のオブジェクトと等しいかどうかを示します。</summary>
      <param name="other">このオブジェクトと比較するオブジェクト。</param>
      <returns>現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合はtrue、それ以外の場合はfalse。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.Function.Evaluate(GrapeCity.CalcEngine.IArguments,GrapeCity.CalcEngine.IValue)">
      <summary>指定された引数に基づいて関数を評価し、評価値を<paramref name="result" />に設定します。</summary>
      <param name="arguments">引数のセットを示す <see cref="T:GrapeCity.CalcEngine.IArguments" /> オブジェクト。</param>
      <param name="result">結果値を設定する<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.Function.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これはハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.StringBuilderCache">
      <summary>スレッドごとのStringBuilderのキャッシュされた再利用可能インスタンスを提供します。これは、作成および回収されるインスタンスの数を減少させる最適化手法です。このクラスは <see langword="static class" /> であるため、初期化できません。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.StringBuilderCache.Acquire(System.Int32)">
      <summary>特定のサイズを使用するストリングビルダーを取得します。これは何度でも呼び出すことができます。ストリングビルダーがキャッシュに格納されている場合は、それが返されてキャッシュは空になります。後続の呼び出しでは、新しいストリングビルダーが返されます。</summary>
      <param name="capacity">容量。</param>
      <returns>StringBuilderインスタンスはスレッドローカルストレージにキャッシュされるため、スレッドごとに1つずつ存在します。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.StringBuilderCache.GetStringAndRelease(System.Text.StringBuilder)">
      <summary>ストリングビルダーのToString()を実行し、それをキャッシュに解放して、結果の文字列を返します。</summary>
      <param name="sb">ストリングビルダー。</param>
      <returns>System.String。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.StringBuilderCache.Release(System.Text.StringBuilder)">
      <summary>指定したビルダーが大きすぎない場合、それをキャッシュに配置します。解放されたストリングビルダーは使用しないでください。Releaseがアンバランスであっても問題ありません。次回Acquireが呼び出されたときに新しいストリングビルダーが作成されるだけです。</summary>
      <param name="sb">ストリングビルダー。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.SyntaxHighlight">
      <summary>数式の構文強調表示情報を表します。このクラスは継承できません。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlight.Count">
      <summary>強調表示項目の総数を取得します。</summary>
      <value>強調表示項目の総数を表す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlight.Formula">
      <summary>この <see cref="T:GrapeCity.CalcEngine.SyntaxHighlight" /> 値の対応する数式を取得します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.SyntaxHighlight.Accept(GrapeCity.CalcEngine.ISyntaxHighlighter,System.Int32,System.Int32)">
      <summary>強調表示項目を処理する構文ハイライターとして、指定された構文ハイライターを受け入れます。</summary>
      <param name="syntaxHighlighter">構文ハイライター。</param>
    </member>
    <member name="P:GrapeCity.CalcEngine.UnaryOperatorExpression.Expression">
      <summary>式を取得または設定します。</summary>
      <value>式。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.UnaryOperatorExpression.ExpressionCount">
      <summary>子式の総数を取得します。</summary>
      <value>子式の総数を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.UnaryOperatorExpression.Symbol">
      <summary>演算子の記号を取得します。</summary>
      <value>演算子の記号を示す文字列値。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.UnaryOperatorExpression.Equals(GrapeCity.CalcEngine.Expression)">
      <summary>現在の<see cref="P:GrapeCity.CalcEngine.UnaryOperatorExpression.Expression" />が別の<see cref="P:GrapeCity.CalcEngine.UnaryOperatorExpression.Expression" nolink="true" />と等しいかどうかを示します。</summary>
      <param name="other">比較するインスタンス。</param>
      <returns>
        現在の<see cref="P:GrapeCity.CalcEngine.UnaryOperatorExpression.Expression" />が比較対象の<see cref="P:GrapeCity.CalcEngine.UnaryOperatorExpression.Expression" nolink="true" />と等しい場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.UnaryOperatorExpression.GetExpression(System.Int32)">
      <summary>指定した位置にある式を取得します。</summary>
      <param name="index">式の位置を示す整数値。</param>
      <returns>指定した位置にある式。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.UnaryOperatorExpression.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これはハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.UnaryOperatorExpression.SetExpression(System.Int32,GrapeCity.CalcEngine.Expression)">
      <summary>指定した位置にある式を置き換えます。</summary>
      <param name="index">置き換える式の位置を示す整数値。</param>
      <param name="expression">置き換える式。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.UnaryOperatorExpression.Unparse(GrapeCity.CalcEngine.FormulaEngine,System.Text.StringBuilder)">
      <summary>現在の <see cref="T:GrapeCity.CalcEngine.UnaryOperatorExpression" /> を数式テキストに逆解析します。</summary>
      <param name="engine">逆解析するパーサー。</param>
      <param name="sb">数式テキストを追加する <see cref="T:System.Text.StringBuilder" /> 。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.Wildcard.#ctor">
      <summary><see cref="T:GrapeCity.CalcEngine.Wildcard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.Wildcard.IsMatch(GrapeCity.CalcEngine.WildcardToken[],System.String,System.Boolean,System.Int32,System.StringComparison)">
      <summary>ワイルドカード文字列をトークンと照合します。私のコーディング能力で可能な最良のパフォーマンスが得られる非再帰的アルゴリズムを使用しています。</summary>
      <param name="tokens">トークン。</param>
      <param name="str">文字列。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.Wildcard.ParseTokens(System.String,System.Boolean)">
      <summary>ワイルドカードトークンを解析します。</summary>
      <param name="pattern">ワイルドカードのパターンを示す文字列値。</param>
      <param name="startsWithTokens"><c>true</c>に設定すると、パターンは「次の文字で始まる」比較に使用されます。</param>
      <returns>ワイルドカードトークンを表す<see cref="T:GrapeCity.CalcEngine.WildcardToken" />配列。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.CellReference">
      <summary>特定のコンテキストに関係するセル参照を表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.#ctor(System.Int32,System.Int32)">
      <summary>絶対セル参照を表す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="row">行のインデックスを示す整数。</param>
      <param name="column">列のインデックスを示す整数。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.#ctor(System.Int32,System.Int32,GrapeCity.CalcEngine.CellRelation)">
      <summary><see cref="T:GrapeCity.CalcEngine.CellReference" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="row">行のインデックスを示す整数。</param>
      <param name="column">列のインデックスを示す整数。</param>
      <param name="relation">この<see cref="T:GrapeCity.CalcEngine.CellReference" />のソースとの関係を示す<see cref="P:GrapeCity.CalcEngine.CellReference.Relation" />値。</param>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellReference.Empty">
      <summary>空のCellReferenceインスタンス。 このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellReference.Column">
      <summary>列のインデックスを取得します。</summary>
      <value>列のインデックスを表す整数。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellReference.Relation">
      <summary>この<see cref="T:GrapeCity.CalcEngine.CellReference" />のソースとの関係を取得します。</summary>
      <value>この<see cref="T:GrapeCity.CalcEngine.CellReference" />のソースとの関係を示す<see cref="P:GrapeCity.CalcEngine.CellReference.Relation" />値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellReference.Row">
      <summary>行のインデックスを取得します。</summary>
      <value>行のインデックスを表す整数。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.CompareTo(GrapeCity.CalcEngine.CellReference)">
      <summary>現在の<see cref="T:GrapeCity.CalcEngine.CellReference" />を別の<see cref="T:GrapeCity.CalcEngine.CellReference" nolink="true" />と比較します。</summary>
      <param name="other">この<see cref="T:GrapeCity.CalcEngine.CellReference" nolink="true" />と比較する <see cref="T:GrapeCity.CalcEngine.CellReference" /> 。</param>
      <returns>比較する<see cref="T:GrapeCity.CalcEngine.CellReference" />値の相対的順序を示す値。戻り値の意味は次のとおりです。0より小さい: このオブジェクトはotherパラメーターより小さい。0: このオブジェクトはotherパラメーターと等しい。0より大きい: このオブジェクトはotherパラメーターより大きい。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.Equals(GrapeCity.CalcEngine.CellReference)">
      <summary>現在の<see cref="T:GrapeCity.CalcEngine.CellReference" />が同じ型の別の<see cref="T:GrapeCity.CalcEngine.CellReference" nolink="true" />と等しいかどうかを示します。</summary>
      <param name="other">このオブジェクトと比較するオブジェクト。</param>
      <returns>
        現在の<see cref="T:GrapeCity.CalcEngine.CellReference" />が比較対象の<see cref="T:GrapeCity.CalcEngine.CellReference" nolink="true" />と等しい場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> がこのインスタンスと等しいかどうかを判断します。</summary>
      <param name="obj">このインスタンスと比較する <see cref="T:System.Object" /> 。</param>
      <returns>
        指定した<see cref="T:System.Object" />がこのインスタンスと等しい場合は<c>true</c> 、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これはハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.SwitchReferenceType">
      <summary>この<see cref="T:GrapeCity.CalcEngine.CellReference" />の参照型を切り替えます。</summary>
      <returns>新しい参照型。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.SwitchReferenceType(GrapeCity.CalcEngine.CellRelation)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.CellReference" />の参照型を指定された型に切り替えます。</summary>
      <param name="newReferenceType">新しい参照型。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.ToAbsolute(System.Int32,System.Int32)">
      <summary><paramref name="contextRow" /> と <paramref name="contextColumn" /> によって指定されたコンテキストセルに対する<see cref="T:GrapeCity.CalcEngine.CellReference" />オブジェクトの絶対参照を返します。</summary>
      <param name="contextRow">コンテキストセルの行インデックスを示す整数。</param>
      <param name="contextColumn">コンテキストセルの列インデックスを示す整数。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.ToContextWithoutReorder(System.Int32,System.Int32)">
      <summary><paramref name="contextRow" />と<paramref name="contextColumn" />によって指定されたコンテキストセルに対する<see cref="T:GrapeCity.CalcEngine.CellReference" />オブジェクトのターゲット参照を返します。<see cref="T:GrapeCity.CalcEngine.CellReference" nolink="true" />の位置状態は変更されません。</summary>
      <param name="contextRow">コンテキストセルの行インデックスを示す整数。</param>
      <param name="contextColumn">コンテキストセルの列インデックスを示す整数。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.ToRelative(System.Int32,System.Int32)">
      <summary><paramref name="contextRow" />と<paramref name="contextColumn" />によって指定されたコンテキストセルに対する<see cref="T:GrapeCity.CalcEngine.CellReference" />オブジェクトのターゲット参照を返します。<see cref="T:GrapeCity.CalcEngine.CellReference" nolink="true" />の位置状態は変更されません。</summary>
      <param name="contextRow">コンテキスト行インデックスを示す整数値。</param>
      <param name="contextColumn">コンテキスト列インデックスを示す整数値。</param>
      <returns>ターゲット場所を示す<see cref="T:GrapeCity.CalcEngine.CellReference" />。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.op_Equality(GrapeCity.CalcEngine.CellReference,GrapeCity.CalcEngine.CellReference)">
      <summary>2つの<see cref="T:GrapeCity.Spreadsheet.CellReference" />が等しいかどうかを返します。</summary>
      <param name="cell1">比較する最初の <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="cell2">比較する2番目の <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <returns>
        2つの値が等しい場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellReference.op_Inequality(GrapeCity.CalcEngine.CellReference,GrapeCity.CalcEngine.CellReference)">
      <summary>2つの<see cref="T:GrapeCity.Spreadsheet.CellReference" />が等しくないかどうかを返します。</summary>
      <param name="cell1">比較する最初の <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="cell2">比較する2番目の <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <returns>
        2つの値が等しくない場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.CellValue">
      <summary>セル値を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValue.Invalid">
      <summary>無効なセル値を表します。このフィールドは読み取り専用です。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.DateTime">
      <summary><see cref="P:GrapeCity.CalcEngine.CellValue.DateTime" /> 値を取得します。</summary>
      <value>日付を表す <see cref="P:GrapeCity.CalcEngine.CellValue.DateTime" /> 値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.Error">
      <summary><see cref="T:GrapeCity.CalcEngine.CalcError" /> 値を取得します。</summary>
      <value>エラーを表す <see cref="T:GrapeCity.CalcEngine.CalcError" /> 値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.Logical">
      <summary><see cref="T:System.Boolean" /> 値を取得します。</summary>
      <value>ブール値を表す<see cref="T:System.Boolean" />値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.Number">
      <summary><see cref="T:System.Double" /> 値を取得します。</summary>
      <value>数値を表す<see cref="T:System.Double" />値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.Object">
      <summary><see cref="T:System.Object" /> 値を取得します。</summary>
      <value>値を表す<see cref="T:System.Object" />値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.Text">
      <summary><see cref="T:System.String" /> 値を取得します。</summary>
      <value>テキストを表す <see cref="T:System.String" /> 値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.TimeSpan">
      <summary><see cref="P:GrapeCity.CalcEngine.CellValue.TimeSpan" /> 値を取得します。</summary>
      <value>タイムスパンを表す<see cref="P:GrapeCity.CalcEngine.CellValue.TimeSpan" />値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.Type">
      <summary>値型を示す<see cref="T:GrapeCity.Spreadsheet.CellValueType" />値を取得します。</summary>
      <value>種類。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.CellValue.Type2">
      <summary>値型を示す<see cref="T:GrapeCity.Spreadsheet.CellValueType" />値を取得します。</summary>
      <value>種類。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellValue.Box">
      <summary>このセル値のボックス化された値を返します。</summary>
      <returns>ボックス化された値を表す<see cref="T:System.Object" />インスタンス。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellValue.Equals(GrapeCity.CalcEngine.CellValue)">
      <summary>現在の<see cref="T:GrapeCity.CalcEngine.CellValue" />値が別の<see cref="T:GrapeCity.CalcEngine.CellValue" nolink="true" />値と等しいかどうかを示します。</summary>
      <param name="other">この<see cref="T:GrapeCity.CalcEngine.CellValue" nolink="true" />値と比較する <see cref="T:GrapeCity.CalcEngine.CellValue" /> 。</param>
      <returns>
        現在のオブジェクトがotherパラメーターと等しい場合は <c>true</c>、それ以外の場合は  <c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellValue.IsValid">
      <summary>このセル値が有効かどうかを判断します。</summary>
      <returns>
        このセル値が有効な場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellValue.Reset">
      <summary>このセル値を<c>null</c>にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.CellValue.SetValue(System.TimeSpan)">
      <summary>値をTimeSpanとして設定します。Spread Win用。</summary>
      <param name="value" />
    </member>
    <member name="M:GrapeCity.CalcEngine.CellValue.SetValue(System.DateTime)">
      <summary>DateTime値を設定します。Spread Win用。</summary>
      <param name="value" />
    </member>
    <member name="M:GrapeCity.CalcEngine.CellValue.SetValue(System.Object)">
      <summary><see cref="T:System.Object" /> 値を設定します。</summary>
      <param name="value">設定する <see cref="T:System.Object" /> 値。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.RangeReference">
      <summary>特定のコンテキストに関係する範囲参照を表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.#ctor(System.Int32,System.Int32,GrapeCity.CalcEngine.CellRelation)">
      <summary><see cref="T:GrapeCity.CalcEngine.RangeReference" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="row">行インデックスを示す整数値。</param>
      <param name="column">列インデックスを示す整数値。</param>
      <param name="position">参照が相対参照、絶対参照、相対参照と絶対参照の混在のいずれであるかを示す<see cref="T:GrapeCity.CalcEngine.CellRelation" />値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary><see cref="T:GrapeCity.CalcEngine.RangeReference" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="row">一番上の行の絶対インデックスを示す整数値。</param>
      <param name="column">左端の列の絶対インデックスを示す整数値。</param>
      <param name="row2">一番下の行の絶対インデックスを示す整数値。</param>
      <param name="column2">右端の列の絶対インデックスを示す整数値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.#ctor(System.Int32,System.Int32,GrapeCity.CalcEngine.CellRelation,System.Int32,System.Int32,GrapeCity.CalcEngine.CellRelation)">
      <summary><see cref="T:GrapeCity.CalcEngine.RangeReference" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="row">一番上の行のインデックスを示す整数値。</param>
      <param name="column">左端の列のインデックスを示す整数値。</param>
      <param name="topLeftPosition">左上の参照が相対参照、絶対参照、相対参照と絶対参照の混在のいずれであるかを示す<see cref="T:GrapeCity.CalcEngine.CellRelation" />値。</param>
      <param name="row2">一番下の行のインデックスを示す整数値。</param>
      <param name="column2">右端の列のインデックスを示す整数値。</param>
      <param name="bottomRightPosition">右下の参照が相対参照、絶対参照、相対参照と絶対参照の混在のいずれであるかを示す<see cref="T:GrapeCity.CalcEngine.CellRelation" />値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.#ctor(GrapeCity.CalcEngine.CellReference,GrapeCity.CalcEngine.CellReference)">
      <summary><see cref="T:GrapeCity.CalcEngine.RangeReference" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="topLeft">左上の参照。</param>
      <param name="bottomRight">右下の参照。</param>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.BottomRight">
      <summary>右下のセル参照を取得します。</summary>
      <value>右下のセル参照を表す<see cref="T:GrapeCity.CalcEngine.CellReference" />値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.Column">
      <summary>左端の列のインデックスを取得します。</summary>
      <value>左端の列のインデックスを表す整数。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.Column2">
      <summary>右端の列のインデックスを取得します。</summary>
      <value>右端の列のインデックスを表す整数。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.IsWholeColumn">
      <summary>このインスタンスが列全体かどうかを示す値を取得します。</summary>
      <value>
        このインスタンスが列全体の場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.IsWholeRow">
      <summary>このインスタンスが行全体かどうかを示す値を取得します。</summary>
      <value>
        このインスタンスが行全体の場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.Row">
      <summary>一番上の行のインデックスを取得します。</summary>
      <value>一番上の行のインデックスを表す整数。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.Row2">
      <summary>一番下の行のインデックスを取得します。</summary>
      <value>一番下の行のインデックスを表す整数。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.RangeReference.TopLeft">
      <summary>左上のセル参照を取得します。</summary>
      <value>左上のセル参照を表す<see cref="T:GrapeCity.CalcEngine.CellReference" />値。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.CompareTo(GrapeCity.CalcEngine.RangeReference)">
      <summary>現在の<see cref="T:GrapeCity.CalcEngine.RangeReference" />を別の<see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" />と比較します。</summary>
      <param name="other">この<see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" />と比較する <see cref="T:GrapeCity.CalcEngine.RangeReference" /> 。</param>
      <returns>比較する<see cref="T:GrapeCity.CalcEngine.CellReference" />値の相対的順序を示す値。戻り値の意味は次のとおりです。0より小さい: このオブジェクトはotherパラメーターより小さい。0: このオブジェクトはotherパラメーターと等しい。0より大きい: このオブジェクトはotherパラメーターより大きい。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.Equals(GrapeCity.CalcEngine.RangeReference)">
      <summary>現在の<see cref="T:GrapeCity.CalcEngine.RangeReference" />が同じ型の別の<see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" />と等しいかどうかを示します。</summary>
      <param name="other">このオブジェクトと比較するオブジェクト。</param>
      <returns>
        現在の<see cref="T:GrapeCity.CalcEngine.RangeReference" />が比較対象の<see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" />と等しい場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> がこのインスタンスと等しいかどうかを判断します。</summary>
      <param name="obj">このインスタンスと比較する <see cref="T:System.Object" /> 。</param>
      <returns>
        指定した<see cref="T:System.Object" />がこのインスタンスと等しい場合は<c>true</c> 、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.GetHashCode">
      <summary>このインスタンスのハッシュコードを返します。</summary>
      <returns>このインスタンスのハッシュコード。これはハッシュアルゴリズムや、ハッシュテーブルのようなデータ構造での使用に適しています。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.IntersectWith(GrapeCity.CalcEngine.RangeReference@)">
      <summary>この <see cref="T:GrapeCity.CalcEngine.RangeReference" /> 範囲を指定した <see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" /> 範囲と交差します。</summary>
      <param name="range">交差する<see cref="T:GrapeCity.CalcEngine.RangeReference" />範囲。</param>
      <returns>交差した <see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" /> 範囲を表す <see cref="T:GrapeCity.CalcEngine.RangeReference" /> 範囲。</returns>
      <remarks>すべての行と列がすべて絶対的または相対的であることを確認してください。</remarks>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.IsEmpty">
      <summary>このインスタンスが空かどうかを判断します。</summary>
      <returns>
        このインスタンスが空の場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.IsIntersected(GrapeCity.CalcEngine.RangeReference@)">
      <summary>この参照が指定した参照と交差しているかどうかを判断します。</summary>
      <param name="rangeReference">範囲参照。</param>
      <returns>
        この参照が指定した参照と交差している場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.IsIntersected(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>この参照が指定した参照と交差しているかどうかを判断します。</summary>
      <param name="row">セル範囲の一番上の行のインデックスを示す整数値。</param>
      <param name="column">セル範囲の左端の列のインデックスを示す整数値。</param>
      <param name="row2">セル範囲の一番下の行のインデックスを示す整数値。</param>
      <param name="column2">セル範囲の右端の列のインデックスを示す整数値。</param>
      <returns>
        指定した行が交差している場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.IsOneCell">
      <summary>この参照が単一のセルかどうかを示す値を取得します。</summary>
      <returns>
        この参照が単一のセルの場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.Offset(System.Int32,System.Int32)">
      <summary>この <seealso cref="T:GrapeCity.CalcEngine.RangeReference" /> を指定した量だけ平行移動します。</summary>
      <param name="translateRows">y座標のオフセット量。</param>
      <param name="translateColumns">&gt;x座標のオフセット量。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.ReorderAbsolute">
      <summary>絶対範囲参照を並べ替えます。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.SwitchReferenceType">
      <summary>この<see cref="T:GrapeCity.CalcEngine.CellReference" />の参照型を切り替えます。</summary>
      <returns>新しい参照型。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.SwitchReferenceType(GrapeCity.CalcEngine.CellRelation)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.CellReference" />の参照型を指定された型に切り替えます。</summary>
      <param name="newReferenceType">新しい参照型。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.ToAbsolute(System.Int32,System.Int32)">
      <summary><paramref name="contextRow" /> と <paramref name="contextColumn" /> によって指定されたコンテキストセルに対する<see cref="T:GrapeCity.CalcEngine.RangeReference" />オブジェクトの絶対参照を返します。</summary>
      <param name="contextRow">コンテキストセルの行インデックスを示す整数。</param>
      <param name="contextColumn">コンテキストセルの列インデックスを示す整数。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.ToAbsolute">
      <summary>絶対参照を取得するために相対参照フラグを削除します。</summary>
      <returns>この参照の絶対参照を表す<see cref="!:RangeReference." />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.ToContextWithoutReorder(System.Int32,System.Int32)">
      <summary><paramref name="contextRow" />と<paramref name="contextColumn" />によって指定されたコンテキストセルに対する<see cref="T:GrapeCity.CalcEngine.RangeReference" />オブジェクトのターゲット参照を返します。<see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" />の位置状態は変更されません。</summary>
      <param name="contextRow">コンテキストセルの行インデックスを示す整数。</param>
      <param name="contextColumn">コンテキストセルの列インデックスを示す整数。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.RangeReference.ToRelative(System.Int32,System.Int32)">
      <summary><paramref name="contextRow" />と<paramref name="contextColumn" />によって指定されたコンテキストセルに対する<see cref="T:GrapeCity.CalcEngine.RangeReference" />オブジェクトのターゲット参照を返します。<see cref="T:GrapeCity.CalcEngine.RangeReference" nolink="true" />の位置状態は変更されません。</summary>
      <param name="contextRow">コンテキストセルの行インデックスを示す整数。</param>
      <param name="contextColumn">コンテキストセルの列インデックスを示す整数。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.SyntaxHighlightEntry">
      <summary>数式の指定した位置の構文強調表示情報を表します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.ArgbColor">
      <summary>この強調表示項目のARGB色を取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.CharIndex">
      <summary>この<see cref="T:GrapeCity.CalcEngine.SyntaxHighlightEntry" />の数式内での開始文字インデックスを取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.CharLength">
      <summary>この<see cref="T:GrapeCity.CalcEngine.SyntaxHighlightEntry" />の数式内での文字長を取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.Count">
      <summary>引数の総数を取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.FirstSource">
      <summary>この項目の最初の対応する参照を取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.Function">
      <summary>この強調表示項目の対応する<see cref="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.Function" />オブジェクトを取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.IsColorized">
      <summary>構文強調表示項目に色を付けるかどうかを示すブール値を取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.IsSpilledCell">
      <summary>この強調表示項目がスピルセルかどうかを示す値を取得します。</summary>
      <value>
        この強調表示項目がスピルセルの場合は<c>true</c>、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.Item(System.Int32)">
      <summary>指定した引数インデックスにある <see cref="T:GrapeCity.CalcEngine.SyntaxHighlightEntry" /> 値を取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.LastSource">
      <summary>この項目の最後の対応する参照を取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.SyntaxHighlightEntry.Reference">
      <summary>この項目の対応する参照を取得します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.WildcardToken.#ctor(System.Int32)">
      <summary><see cref="T:GrapeCity.CalcEngine.WildcardToken" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="type">タイプ。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.WildcardToken.#ctor(System.Char)">
      <summary><see cref="T:GrapeCity.CalcEngine.WildcardToken" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="token">トークン。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.IArguments">
      <summary>関数に渡される引数のセットを表します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IArguments.Count">
      <summary>引数の総数を取得します。</summary>
      <value>引数の総数を示す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IArguments.EvaluationContext">
      <summary>評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />インスタンスを取得します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IArguments.Item(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:GrapeCity.CalcEngine.IValue" /> 引数を取得します。</summary>
      <param name="index">引数のインデックスを示す整数値。</param>
      <value>指定した引数の値を示す<see cref="T:GrapeCity.CalcEngine.IValue" />インスタンス。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IArguments.GetArrayValue(System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>配列引数内の項目の値を取得します。</summary>
      <param name="index">引数のインデックスを示す整数値。</param>
      <param name="row">項目の行配列インデックスを示す整数値。</param>
      <param name="column">項目の列配列インデックスを示す整数値。</param>
      <param name="result">配列引数内の指定した項目の値を含む<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />インスタンス。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.IAsyncFunctionManager">
      <summary>非同期関数が完了した後の処理を扱う非同期関数マネージャを表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IAsyncFunctionManager.OnDataChanged(GrapeCity.CalcEngine.AsyncApplication)">
      <summary>非同期関数が完了したときに呼び出されます。</summary>
      <param name="asyncApplication">非同期関数アプリケーションを示す<see cref="T:GrapeCity.CalcEngine.AsyncApplication" />オブジェクト。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.ICalcEngineLanguagePackage">
      <summary>数式の言語パッケージを表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.ICalcEngineLanguagePackage.GetFunctionParameter(GrapeCity.CalcEngine.Function,System.String)">
      <summary>指定したローカライズされたパラメーターの英語のパラメーター値を取得します。</summary>
      <param name="function">処理中の関数。</param>
      <param name="localizedParam">ローカライズされたパラメーター。</param>
      <returns>指定したローカライズされたパラメーターの英語のパラメーター値。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.IEvaluationContext">
      <summary>評価可能クラスの派生元のインタフェース。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IEvaluationContext.ContextColumn">
      <summary>評価される数式を含むセルの列インデックスを取得します。</summary>
      <value>セルの列インデックスを示す、0から始まる整数。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IEvaluationContext.ContextRow">
      <summary>評価される数式を含むセルの行インデックスを取得します。</summary>
      <value>セルの行インデックスを示す、0から始まる整数。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IEvaluationContext.Error">
      <summary>計算エラーを取得または設定します。</summary>
      <value>計算エラー値。</value>
      <remarks>最初の計算エラーが最も高い優先順位を持ちます。これは計算エラーが解消されるまで維持されます。</remarks>
    </member>
    <member name="P:GrapeCity.CalcEngine.IEvaluationContext.ExcelDateTimeCompatible">
      <summary>日付時刻の処理はLotus123と互換性があります。1900年はうるう年ではないとみなされます。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IEvaluationContext.LanguagePackage">
      <summary>計算用に現在の言語パッケージを取得します。</summary>
      <value>言語パッケージを表す <see cref="T:GrapeCity.CalcEngine.ICalcEngineLanguagePackage" /> オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IEvaluationContext.ReferenceSource">
      <summary>数式が評価される参照ソースを取得します。</summary>
      <value>数式が評価される参照ソースを表す<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />オブジェクト。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.AllocValue">
      <summary>新しい <see cref="T:GrapeCity.CalcEngine.IValue" /> オブジェクトを新しく割り当てます。</summary>
      <returns>新しく割り当てられた <see cref="T:GrapeCity.CalcEngine.IValue" /> オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.AllocValue(System.Int32)">
      <summary>複数の<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトを割り当てます。</summary>
      <param name="count">割り当てる<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトの総数。</param>
      <returns>割り当てられた最初の<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトのインデックスを示す、0から始まる整数。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.DeallocValue">
      <summary>最後に作成された<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトの割り当てを解除します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.DeallocValue(System.Int32)">
      <summary>最後に作成された<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトの割り当てを解除します。</summary>
      <param name="count">割り当てを解除する<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトの総数。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.EnterContext(GrapeCity.CalcEngine.IReferenceSource,System.Int32,System.Int32)">
      <summary>指定した評価コンテキストに入ります。</summary>
      <param name="source">数式を使用する <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> オブジェクト。</param>
      <param name="contextRow">コンテキスト行インデックスを示す整数値。</param>
      <param name="contextColumn">コンテキスト列インデックスを示す整数値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.Evaluate(GrapeCity.CalcEngine.Expression,GrapeCity.CalcEngine.IValue)">
      <summary>指定された式を評価し、評価結果を <paramref name="result" /> パラメーターによって返します。</summary>
      <param name="expression">評価する式。</param>
      <param name="result">評価結果を格納する<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.ExitContext">
      <summary>現在の評価コンテキストから抜けて以前の評価コンテキストに戻ります。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IEvaluationContext.GetValue(System.Int32)">
      <summary>指定したインデックスにある <see cref="T:GrapeCity.CalcEngine.IValue" /> オブジェクトを取得します。</summary>
      <param name="index"><see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトのインデックスを示す、0から始まる整数。</param>
      <returns>IValue。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.IFunctionResolver">
      <summary>関数を解決するインタフェースを表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IFunctionResolver.Resolve(System.String)">
      <summary>指定した名前から関数を解決します。</summary>
      <param name="name">関数名を示す文字列値。</param>
      <returns>解析された関数を表す<see cref="T:GrapeCity.CalcEngine.Function" />オブジェクト。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.IOperatorResolver">
      <summary>演算子の動作をオーバーライドできるインタフェースを表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IOperatorResolver.Resolve(GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.OperatorType,GrapeCity.CalcEngine.Expression,GrapeCity.CalcEngine.Expression)">
      <summary>解析演算子を解決します。</summary>
      <param name="opType">演算子を示す<see cref="T:GrapeCity.CalcEngine.OperatorType" />値。</param>
      <param name="leftArg">左引数式を示す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</param>
      <param name="rightArg">右引数式を示す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.IPrimitiveValue">
      <summary>計算エンジンのプリミティブな計算値のためのインタフェースを表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.CompareTo(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>このインスタンスを指定した<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />オブジェクトと比較し、両者の相対関係を示す値を返します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <param name="value">比較する値を示す<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />オブジェクト。</param>
      <returns>このインスタンスとvalueの大小関係を示す符号付きの数値。戻り値の意味は次のとおりです。0より小さい: このインスタンスはvalueより小さい。0: このインスタンスはvalueと等しい。0より大きい: このインスタンスはvalueより大きい、またはvalueがnull。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.Reset">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />オブジェクトを空にリセットします。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.SetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Double)">
      <summary><see cref="T:System.Double" /> 値を設定します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <param name="value">設定する <see cref="T:System.Double" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.SetValue(System.Object)">
      <summary><see cref="T:System.Object" /> 値を設定します。</summary>
      <param name="value">設定する <see cref="T:System.Object" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.SetValue(GrapeCity.CalcEngine.CalcError)">
      <summary><see cref="T:GrapeCity.CalcEngine.CalcError" /> 値を設定します。</summary>
      <param name="value">設定する <see cref="T:GrapeCity.CalcEngine.CalcError" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.SetValue(GrapeCity.CalcEngine.IEvaluationContext,System.String)">
      <summary><see cref="T:System.String" /> 値を設定します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <param name="value">設定する <see cref="T:System.String" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.SetValue(System.Boolean)">
      <summary><see cref="T:System.Boolean" /> 値を設定します。</summary>
      <param name="value">設定する <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.SetValue(System.DateTime)">
      <summary><see cref="T:System.DateTime" /> 値を設定します。</summary>
      <param name="value">設定する <see cref="T:System.DateTime" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IPrimitiveValue.SetValue(System.TimeSpan)">
      <summary><see cref="T:System.TimeSpan" /> 値を設定します。</summary>
      <param name="value">設定する <see cref="T:System.TimeSpan" /> 値。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.IReadonlyPrimitiveValue">
      <summary>計算エンジンのプリミティブな計算値のためのインタフェースを表します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IReadonlyPrimitiveValue.ValueType">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />インスタンスの値型を取得します。</summary>
      <value><see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />インスタンスのデータの型。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReadonlyPrimitiveValue.GetDate(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary><see cref="T:System.DateTime" /> 値を取得します。</summary>
      <param name="context">値を取得するための評価コンテキスト。</param>
      <returns><see cref="T:System.DateTime" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReadonlyPrimitiveValue.GetError(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary><see cref="T:GrapeCity.CalcEngine.CalcError" /> 値を取得します。</summary>
      <param name="context">値を取得するための評価コンテキスト。</param>
      <returns><see cref="T:GrapeCity.CalcEngine.CalcError" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReadonlyPrimitiveValue.GetLogical(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary><see cref="T:System.Boolean" /> 値を取得します。</summary>
      <param name="context">値を取得するための評価コンテキスト。</param>
      <returns><see cref="T:System.Boolean" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReadonlyPrimitiveValue.GetNumber(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary><see cref="T:System.Double" /> 値を取得します。</summary>
      <param name="context">値を取得するための評価コンテキスト。</param>
      <returns><see cref="T:System.Double" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReadonlyPrimitiveValue.GetText(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary><see cref="T:System.String" /> 値を取得します。</summary>
      <param name="context">値を取得するための評価コンテキスト。</param>
      <returns><see cref="T:System.String" /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReadonlyPrimitiveValue.GetTime(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary><see cref="T:System.TimeSpan" /> 値を取得します。</summary>
      <param name="context">値を取得するための評価コンテキスト。</param>
      <returns><see cref="T:System.TimeSpan" /> 値。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.IReferenceSource">
      <summary>セル参照または範囲参照のソースを示します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IReferenceSource.ColumnCount">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> に含まれる列の数を取得します。</summary>
      <value>この <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> の列数を表す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IReferenceSource.Date1904">
      <summary>日付のシリアル値への変換に使用される日付方式が1904年から始まるかどうかを取得します。</summary>
      <value>
        日付方式が1904年に始まる場合は<c>true</c>、それ以外の場合は<c>false</c>。デフォルトは<c>false</c>です。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IReferenceSource.Name">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> の名前を取得します。</summary>
      <value>この<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />の名前を表す文字列値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IReferenceSource.RowCount">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> に含まれる行の数を取得します。</summary>
      <value>この <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> の行数を表す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IReferenceSource.Supports3DReference">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> オブジェクトが3D参照をサポートするかどうかを示す値を取得します。</summary>
      <value>
        この<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />オブジェクトが3D参照をサポートする場合は<c>true</c> 、それ以外の場合は<c>false</c>。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.EnsureCalculated(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定した範囲内のすべてのセルが計算されるようにします。</summary>
      <param name="context">評価コンテキスト。</param>
      <param name="row">2次元行列の一番上の行インデックスを示す整数値。</param>
      <param name="column">2次元行列の左端の列インデックスを示す整数値。</param>
      <param name="row2">2次元行列の一番下の行インデックスを示す整数値。</param>
      <param name="column2">2次元行列の右端の列インデックスを示す整数値。</param>
      <param name="enableSpilledArray">スピル配列が有効にする場合は<c>true</c>。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.Get3DReferenceIndex">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />オブジェクトの3D参照インデックスを取得します。</summary>
      <returns>この<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />オブジェクトの3D参照インデックスを示す整数値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />を評価する参照式を取得します。</summary>
      <param name="formulaEngine">数式エンジンを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>この<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />を評価する参照式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.GetReferenceExpression(GrapeCity.CalcEngine.FormulaEngine,GrapeCity.CalcEngine.IStructuredObject,GrapeCity.CalcEngine.StructuredItemSpecifiers,System.Int32,System.Int32)">
      <summary>指定した<see cref="T:GrapeCity.CalcEngine.IStructuredObject" />を評価する参照式を取得します。</summary>
      <param name="formulaEngine">数式エンジンを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <param name="structuredObject">構造化オブジェクトを示す <see cref="T:GrapeCity.CalcEngine.IStructuredObject" />。</param>
      <param name="itemSpecifiers">項目指定子を示す<see cref="T:GrapeCity.CalcEngine.StructuredItemSpecifiers" />値。</param>
      <param name="columnId">最初の列を示す整数値。</param>
      <param name="columnId2">2番目の列を示す整数値。</param>
      <returns>この<see cref="T:GrapeCity.CalcEngine.Expression" />を評価する参照式を表す<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,GrapeCity.CalcEngine.IPrimitiveValue)">
      <summary>2次元行列の指定した位置にある値を取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <param name="row">2次元行列の行インデックスを示す整数値。</param>
      <param name="column">2次元行列の列インデックスを示す整数値。</param>
      <param name="result">指定した位置にある値を表す<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.IValuesArray,System.Boolean)">
      <summary>2次元行列の指定した範囲にある値を取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <param name="row">2次元行列の一番上の行インデックスを示す整数値。</param>
      <param name="column">2次元行列の左端の列インデックスを示す整数値。</param>
      <param name="row2">2次元行列の一番下の行インデックスを示す整数値。</param>
      <param name="column2">2次元行列の右端の列インデックスを示す整数値。</param>
      <param name="result">指定した位置にある値を表す<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />オブジェクト。</param>
      <param name="keepEmptyValue">空の値を空な状態に維持するかどうかを表すブール値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue[])">
      <summary>2次元行列の指定した範囲にある値を取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <param name="row">2次元行列の一番上の行インデックスを示す整数値。</param>
      <param name="column">2次元行列の左端の列インデックスを示す整数値。</param>
      <param name="row2">2次元行列の一番下の行インデックスを示す整数値。</param>
      <param name="column2">2次元行列の右端の列インデックスを示す整数値。</param>
      <param name="result">指定した範囲にある値を表す<see cref="T:GrapeCity.CalcEngine.CellValue" />配列。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.GetValue(GrapeCity.CalcEngine.IEvaluationContext,System.Int32,System.Int32,GrapeCity.CalcEngine.CellValue@)">
      <summary>2次元行列の指定した位置にある値を取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <param name="row">2次元行列の行インデックスを示す整数値。</param>
      <param name="column">2次元行列の列インデックスを示す整数値。</param>
      <param name="result">指定した位置にある値を表す<see cref="T:GrapeCity.CalcEngine.CellValue" />オブジェクト。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IReferenceSource.IsUndefined">
      <summary>この参照ソースが未定義かどうかを判断します。</summary>
      <returns>
        この参照ソースが未定義の場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.IStructuredObject">
      <summary>データをスプレッドシートとして格納する構造化オブジェクトを表します。</summary>
      <seealso cref="!:System.IEquatable[[SDLENTITYREF[lt]]]GrapeCity.CalcEngine.IStructuredObject[[SDLENTITYREF[gt]]]" />
    </member>
    <member name="P:GrapeCity.CalcEngine.IStructuredObject.HeaderRowCount">
      <summary>見出し行の数を取得します。</summary>
      <value>見出し行の数を表す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IStructuredObject.Name">
      <summary><see cref="T:GrapeCity.CalcEngine.IStructuredObject" />オブジェクトの名前を取得します。</summary>
      <value><see cref="T:GrapeCity.CalcEngine.IStructuredObject" />オブジェクトの名前を表す文字列値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IStructuredObject.Range">
      <summary>構造化オブジェクトの範囲参照を取得します。</summary>
      <value>構造化オブジェクトの範囲を表す <see cref="T:GrapeCity.CalcEngine.RangeReference" /> 値。</value>
      <remarks><see cref="T:GrapeCity.CalcEngine.RangeReference" /> 値は絶対参照である必要があります。</remarks>
    </member>
    <member name="P:GrapeCity.CalcEngine.IStructuredObject.ReferenceSource">
      <summary><see cref="T:GrapeCity.CalcEngine.IStructuredObject" />オブジェクトを含む<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />オブジェクトを取得します。</summary>
      <value><see cref="T:GrapeCity.CalcEngine.IStructuredObject" />オブジェクトを含む<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />オブジェクト。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IStructuredObject.TotalsRowCount">
      <summary>集計行の数を取得します。</summary>
      <value>集計行の数を表す整数値。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IStructuredObject.GetColumnId(System.String)">
      <summary>指定した列の相対列インデックスを取得します。</summary>
      <param name="columnName">列を示す文字列値。</param>
      <returns>相対列インデックスを示す整数値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IStructuredObject.GetColumnIndex(System.Int32)">
      <summary>指定した列のテーブル列インデックスを取得します。</summary>
      <param name="id">構造化オブジェクト内での列の一意のIDを示す整数値。</param>
      <returns>指定した列のテーブル列インデックスを表す<see cref="T:System.Int32" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IStructuredObject.GetColumnName(System.Int32)">
      <summary>指定した列のテーブル列名を取得します。</summary>
      <param name="id">構造化オブジェクト内での列の一意のIDを示す整数値。</param>
      <returns>列名を示す文字列。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IStructuredObject.GetReplacedStructuredObj">
      <summary><see cref="T:GrapeCity.CalcEngine.IStructuredObject" />が削除された場合、その代わりに使用される置換項目を取得します。</summary>
      <returns><see cref="T:GrapeCity.CalcEngine.IStructuredObject" />の置換項目。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IStructuredObject.IsUndefined">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IStructuredObject" />オブジェクトが未定義かどうかを判断します。</summary>
      <returns>
        この<see cref="T:GrapeCity.CalcEngine.IStructuredObject" />オブジェクトが未定義の場合は<c>true</c> 、それ以外の場合は<c>false</c>。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IStructuredObject.SetColumnName(System.Int32,System.String)">
      <summary>指定した列のテーブル列名を取得します。</summary>
      <param name="index">テーブル列インデックスを示す整数値。</param>
      <param name="columnName">列を示す文字列値。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.ISymbolResolver">
      <summary>記号を解決するインタフェースを表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISymbolResolver.GetUndefinedExpression(GrapeCity.CalcEngine.FormulaEngine,System.String)">
      <summary>指定した記号から未定義の式を解決します。</summary>
      <param name="symbol">記号を示す文字列値。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>解析された式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISymbolResolver.Resolve(GrapeCity.CalcEngine.FormulaEngine,System.Char*,System.Int32,System.Int32)">
      <summary>指定した記号から式を解決します。</summary>
      <param name="formula">数式テキストを示す文字配列。</param>
      <param name="index">記号の開始インデックスを示す整数値。</param>
      <param name="length">記号の長さを示す整数値。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>解析された式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISymbolResolver.Resolve(GrapeCity.CalcEngine.FormulaEngine,System.String)">
      <summary>指定した記号から式を解決します。</summary>
      <param name="symbol">記号名を示す文字列値。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>解析された式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISymbolResolver.ResolveReferenceSource(GrapeCity.CalcEngine.FormulaEngine,System.String,System.String,System.String)">
      <summary>指定したパス、ブック名、参照ソース名から参照ソースを解決します。</summary>
      <param name="path">ブックのパスを示す文字列値。</param>
      <param name="bookName">ブック名を示す文字列値。</param>
      <param name="refSourceName">参照ソースを示す文字列値。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>解析された式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISymbolResolver.ResolveReferenceSource(GrapeCity.CalcEngine.FormulaEngine,System.Int32,System.String)">
      <summary>指定したブックインデックスと参照ソース名から参照ソースを解決します。</summary>
      <param name="bookIndex">ブックインデックスを示す整数値。</param>
      <param name="refSourceName">参照ソースを示す文字列値。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>解析された式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISymbolResolver.ResolveStructuredObject(GrapeCity.CalcEngine.FormulaEngine,System.Char*,System.Int32,System.Int32)">
      <summary>指定したオブジェクト名から構造化オブジェクトを解決します。</summary>
      <param name="formula">数式テキストを示す文字配列。</param>
      <param name="index">オブジェクト名の開始インデックスを示す整数値。</param>
      <param name="length">オブジェクト名の長さを示す整数値。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>解析された式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISymbolResolver.ResolveStructuredObject(GrapeCity.CalcEngine.FormulaEngine,System.Int32,System.Int32)">
      <summary>指定したセル位置から構造化オブジェクトを解決します。</summary>
      <param name="row">コンテキスト行を示す整数値。</param>
      <param name="column">コンテキスト列を示す整数値。</param>
      <param name="engine">数式パーサーを示す<see cref="T:GrapeCity.CalcEngine.FormulaEngine" />オブジェクト。</param>
      <returns>解析された式を表す<see cref="T:GrapeCity.CalcEngine.Expression" />オブジェクト。</returns>
    </member>
    <member name="T:GrapeCity.CalcEngine.ISyntaxHighlighter">
      <summary>強調表示を実行する構文ハイライターを表します。</summary>
    </member>
    <member name="M:GrapeCity.CalcEngine.ISyntaxHighlighter.Visit(GrapeCity.CalcEngine.SyntaxHighlight,GrapeCity.CalcEngine.SyntaxHighlightEntry@)">
      <summary>指定された構文強調表示項目にアクセスします。</summary>
      <param name="syntaxHighlight">構文強調表示。</param>
      <param name="syntaxHighlightEntry">処理する構文強調表示項目。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.IValue">
      <summary>計算エンジンの計算値のためのインタフェースを表します。</summary>
      <seealso cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />
    </member>
    <member name="P:GrapeCity.CalcEngine.IValue.ReferenceCount">
      <summary>参照カウントを取得します。</summary>
      <value>参照カウントを表す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IValue.ReferenceSourceCount">
      <summary>参照ソースのカウントを取得します。</summary>
      <value>参照ソースのカウントを表す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IValue.ValueType">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValue" />インスタンスの値型を取得します。</summary>
      <value><see cref="T:GrapeCity.CalcEngine.IValue" />インスタンスのデータの型。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.CopyReferenceTo(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.RangeReference[],System.Int32)">
      <summary>すべての参照を配列の指定した位置にコピーします。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <param name="array">コピー先の配列。</param>
      <param name="index">配列内の位置を示す整数値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.CreateValuesArray(System.Int32,System.Int32)">
      <summary>新しい値配列を作成します。</summary>
      <param name="rowCount">値配列の行数を示す整数値。</param>
      <param name="columnCount">値配列の列数を示す整数値。</param>
      <returns>配列値を表す<see cref="T:GrapeCity.CalcEngine.IValuesArray" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetColumnCount(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary>評価される範囲参照の列数を取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <returns>評価される範囲参照の列数を表す整数値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetPrimitiveValue(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトからプリミティブ値を取得します。</summary>
      <returns>この<see cref="T:GrapeCity.CalcEngine.IValue" />オブジェクトによって参照されている<see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" />インスタンス。</returns>
      <remarks>この関数が呼び出された後、このオブジェクトが変更されないままであることは保証されません。</remarks>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetReference(GrapeCity.CalcEngine.IEvaluationContext,System.Int32)">
      <summary>指定した位置にある参照を取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <param name="index">配列内の位置を示す整数値。</param>
      <returns>指定した位置にある参照を表す <see cref="!:RangeReference." /> 値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetReferenceSource(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary>参照ソースを取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <returns>参照ソースを示す <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetReferenceSource(GrapeCity.CalcEngine.IEvaluationContext,System.Int32)">
      <summary>指定した位置にあるオブジェクトを取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <param name="sourceIndex">オブジェクトの位置を示す整数値。</param>
      <returns>参照ソースを示す <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetReferenceSource2(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary>終了参照ソースを取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <returns>終了参照ソースを示す<see cref="T:GrapeCity.CalcEngine.IReferenceSource" />オブジェクト。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetRowCount(GrapeCity.CalcEngine.IEvaluationContext)">
      <summary>評価される範囲参照の行数を取得します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.EvaluationContext" />オブジェクト。</param>
      <returns>評価される範囲参照の行数を表す整数値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.GetValuesArray">
      <summary>値配列の値を取得します。</summary>
      <returns>配列値を表す<see cref="T:GrapeCity.CalcEngine.IValuesArray" />値。</returns>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.SetReference(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.CellReference,GrapeCity.CalcEngine.IReferenceSource)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValue" />の値を指定したセル参照に設定します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <param name="cellRef">セル参照を示す <see cref="T:GrapeCity.CalcEngine.CellReference" /> 値。</param>
      <param name="refSource">参照ソースを示す <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.SetReference(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.RangeReference,GrapeCity.CalcEngine.IReferenceSource)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValue" />の値を指定した参照に設定します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <param name="rangeRef">範囲参照を示す <see cref="T:GrapeCity.CalcEngine.RangeReference" /> 値。</param>
      <param name="refSource">参照ソースを示す <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.SetReference(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.RangeReference[],GrapeCity.CalcEngine.IReferenceSource)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValue" />の値を指定した参照配列に設定します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <param name="rangeRefs">範囲参照を表す<see cref="T:GrapeCity.CalcEngine.RangeReference" />の配列。</param>
      <param name="refSource">参照ソースを示す <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.SetReference(GrapeCity.CalcEngine.IEvaluationContext,GrapeCity.CalcEngine.RangeReference,GrapeCity.CalcEngine.IReferenceSource,GrapeCity.CalcEngine.IReferenceSource)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValue" />の値を指定した3D参照に設定します。</summary>
      <param name="context">評価コンテキストを示す<see cref="T:GrapeCity.CalcEngine.IEvaluationContext" />値。</param>
      <param name="rangeRefs">範囲参照を表す<see cref="T:GrapeCity.CalcEngine.RangeReference" />の配列。</param>
      <param name="startRefSource">参照ソースを示す <see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> 値。</param>
      <param name="endRefSource">終了参照ソースを示す<see cref="T:GrapeCity.CalcEngine.IReferenceSource" /> 値。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValue.SetValue(GrapeCity.CalcEngine.IValuesArray)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValue" />の値を指定した<see cref="T:GrapeCity.CalcEngine.IValuesArray" />に設定します。</summary>
      <param name="valuesArray">新しい値を表す<see cref="T:GrapeCity.CalcEngine.IValuesArray" />値。</param>
    </member>
    <member name="T:GrapeCity.CalcEngine.IValuesArray">
      <summary>値の2次元配列を表します。</summary>
    </member>
    <member name="P:GrapeCity.CalcEngine.IValuesArray.ColumnCount">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IValuesArray" /> の列数を取得します。</summary>
      <value>この <see cref="T:GrapeCity.CalcEngine.IValuesArray" /> の列数を表す整数値。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IValuesArray.Item(System.Int32,System.Int32)">
      <summary>指定した行と列にある <see cref="T:GrapeCity.CalcEngine.IPrimitiveValue" /> を取得します。</summary>
      <param name="row">行インデックスを示す整数値。</param>
      <param name="column">列インデックスを示す整数値。</param>
      <value>IPrimitiveValue。</value>
    </member>
    <member name="P:GrapeCity.CalcEngine.IValuesArray.RowCount">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IValuesArray" /> の行数を取得します。</summary>
      <value>この <see cref="T:GrapeCity.CalcEngine.IValuesArray" /> の行数を表す整数値。</value>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValuesArray.Resize(System.Int32,System.Int32)">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IValuesArray" /> のサイズを指定した行数および列数に変更します。</summary>
      <param name="rowCount">行の総数。</param>
      <param name="columnCount">列の総数。</param>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValuesArray.SetValue(System.Object)">
      <summary>この<see cref="T:GrapeCity.CalcEngine.IValuesArray" />オブジェクトに値を設定します。</summary>
      <param name="values">1つ以上の値を含むオブジェクト。</param>
      <returns>
        値が設定された場合は<c>true</c>、それ以外の場合は<c>false</c>。</returns>
      <remarks><paramref name="values" />が配列の場合は、配列の各要素がこの<see cref="T:GrapeCity.CalcEngine.IValuesArray" />オブジェクトの対応する要素に設定されます。それ以外の場合は、すべての要素に同じ値が設定されます。</remarks>
    </member>
    <member name="M:GrapeCity.CalcEngine.IValuesArray.Transpose">
      <summary>この <see cref="T:GrapeCity.CalcEngine.IValuesArray" /> の行と列を入れ替えます。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.BuiltinFunction">
      <summary>サポートされているすべての組み込み関数を表します。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.CalcError">
      <summary>計算エラーを表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.None">
      <summary>エラーなし。 この値は内部的に使用され、コードで直接使用することはできません。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Null">
      <summary>#NULL!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.DivideByZero">
      <summary>#DIV/0!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Value">
      <summary>#VALUE!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Reference">
      <summary>#REF!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Name">
      <summary>#NAME!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Number">
      <summary>#NUM!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.NotAvailable">
      <summary>#N/A!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.GettingData">
      <summary>#GETTING_DATA</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Spill">
      <summary>#SPILL!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Unknown">
      <summary>#UNKNOWN!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Field">
      <summary>#FIELD!</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CalcError.Calc">
      <summary>#CALC!</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.CellValueType">
      <summary>セル値の型を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.Number">
      <summary>倍精度浮動小数点数を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.Logical">
      <summary>論理（ブール）値を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.Error">
      <summary><see cref="T:GrapeCity.CalcEngine.CalcError" /> を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.Text">
      <summary>テキストを指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.DateTime">
      <summary><see cref="F:GrapeCity.CalcEngine.CellValueType.DateTime" /> 値を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.TimeSpan">
      <summary><see cref="F:GrapeCity.CalcEngine.CellValueType.TimeSpan" /> 値を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.Empty">
      <summary>空の値（<c>null</c>）を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.CellValueType.Object">
      <summary>一般オブジェクトを指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.SingleCell">
      <summary>関数が配列数式を単一セル数式として処理するかどうかを示します。SUMやCOUNTなどの一部の関数は、配列数式を単一セル数式として処理します。その他の関数は、配列数式を複数セル数式として処理します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Volatile">
      <summary>関数は自動的に再計算されます。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Constant">
      <summary>関数は定数値を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Async">
      <summary>関数は非同期関数を含みます。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Visual">
      <summary>セル値を視覚化するデータ視覚化関数。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Boolean">
      <summary>関数が戻り値としてブール値を返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Number">
      <summary>関数が戻り値として数値を返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Date">
      <summary>関数が戻り値として日付を返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Time">
      <summary>関数が戻り値としてタイムスパンを返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Text">
      <summary>関数が戻り値として文字列を返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Error">
      <summary>関数が戻り値としてCalcErrorを返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Reference">
      <summary>関数が戻り値として参照を返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Array">
      <summary>関数が戻り値として配列を返すことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.FunctionAttributes.Variant">
      <summary>関数が戻り値としてバリアントを返すことを示します。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.OperatorType">
      <summary>演算子のリストを列挙します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Percentage">
      <summary>パーセント演算子（%）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Negation">
      <summary>マイナス演算子（-）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Plus">
      <summary>プラス演算子（+）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.ReferenceSource">
      <summary>参照ソース演算子（!）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.GreaterThanOrEquals">
      <summary>以上演算子(&gt;=)を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.GreaterThan">
      <summary>大なり演算子(&gt;)を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Equals">
      <summary>等号演算子（=）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Subtraction">
      <summary>減算演算子（-）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Addition">
      <summary>加算演算子（+）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Division">
      <summary>除算演算子（/）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Multiplication">
      <summary>乗算演算子（*）を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.OperatorType.Exponentiation">
      <summary>指数演算子（^）を表します。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.PrimitiveValueType">
      <summary>評価されるプリミティブ値の型を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.PrimitiveValueType.Empty">
      <summary>値が返されないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.PrimitiveValueType.Error">
      <summary>値型が計算エラーであることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.PrimitiveValueType.Logical">
      <summary>値型がブール値であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.PrimitiveValueType.Text">
      <summary>値型が文字列であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.PrimitiveValueType.Number">
      <summary>値型が数値であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.PrimitiveValueType.DateTime">
      <summary>値型が、Excel 2010から導入されたDateTimeであることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.PrimitiveValueType.TimeSpan">
      <summary>値型がTimeSpanであることを示します。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.SpilledValueType">
      <summary>セル値の型を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.SpilledValueType.Number">
      <summary>倍精度浮動小数点数を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.SpilledValueType.Logical">
      <summary>論理（ブール）値を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.SpilledValueType.Error">
      <summary><see cref="T:GrapeCity.CalcEngine.CalcError" /> を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.SpilledValueType.Text">
      <summary>テキストを指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.SpilledValueType.DateTime">
      <summary><see cref="F:GrapeCity.CalcEngine.SpilledValueType.DateTime" /> 値を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.SpilledValueType.TimeSpan">
      <summary><see cref="F:GrapeCity.CalcEngine.SpilledValueType.TimeSpan" /> 値を指定します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.SpilledValueType.Empty">
      <summary>空の値（<c>null</c>）を指定します。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.StructuredItemSpecifiers">
      <summary>構造化オブジェクトの項目指定子を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.StructuredItemSpecifiers.All">
      <summary>テーブル全体。列見出し、データ、集計行（存在する場合）が含まれます。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.StructuredItemSpecifiers.Data">
      <summary>データ行のみ。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.StructuredItemSpecifiers.Headers">
      <summary>見出し行のみ。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.StructuredItemSpecifiers.Totals">
      <summary>集計行のみ。存在しない場合はnullを返します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.StructuredItemSpecifiers.ThisRow">
      <summary>数式と同じ行にあるセルのみ。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.StructuredItemSpecifiers.RowHeaders">
      <summary>行見出し。</summary>
    </member>
    <member name="T:GrapeCity.CalcEngine.ValueType">
      <summary>評価値の型を表します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Empty">
      <summary>値が返されないことを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Error">
      <summary>値型が計算エラーであることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Logical">
      <summary>値型がブール値であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Text">
      <summary>値型が文字列であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Number">
      <summary>値型が数値であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.DateTime">
      <summary>値型が、Excel 2010から導入されたDateTimeであることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.TimeSpan">
      <summary>値型がTimeSpanであることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Integer">
      <summary>値型が整数であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Object">
      <summary>値型が一般オブジェクトであることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.ValuesArray">
      <summary>値型が配列であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Reference">
      <summary>値型が（数式で宣言された、または計算された）参照であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.AdjustableReference">
      <summary>値型が、数式で宣言された参照であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.MultiReference">
      <summary>値型がマルチ参照であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.ValueType.Reference3D">
      <summary>値型が3D参照であることを示します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.Volatility.None">
      <summary>関数は常に、与えられた引数に対して同じ結果を返します。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.Volatility.Volatile">
      <summary>自動再計算関数は、ワークブックセットが再計算されるたびに少なくとも1回再計算される必要があります。</summary>
    </member>
    <member name="F:GrapeCity.CalcEngine.Volatility.VolatileInstance">
      <summary>自動再計算関数は、すべてのインスタンスについて再計算される必要があります。</summary>
    </member>
    <member name="T:GrapeCity.Spreadsheet.ICloneable`1">
      <summary>既存インスタンスと同じ値を持つ新しいクラスインスタンスを作成するクローニングをサポートします。</summary>
      <typeparam name="T" />
    </member>
    <member name="M:GrapeCity.Spreadsheet.ICloneable`1.Clone">
      <summary>オブジェクトの複製を返します。</summary>
      <returns>このインスタンスのコピーである新しいオブジェクト。</returns>
    </member>
  </members>
</doc>